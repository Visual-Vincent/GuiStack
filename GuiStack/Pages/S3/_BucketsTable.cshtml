@*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 * 
 * Copyright © Vincent Bengtsson & Contributors 2022
 * https://github.com/Visual-Vincent/GuiStack
 *@

@using GuiStack.Models;
@model IEnumerable<S3Bucket>

@{ await Html.RenderPartialAsync("~/Pages/Shared/_DeleteModal.cshtml", new DeleteModalModel("deleteS3BucketModal")); }

<table class="gs-list padded autosize-all-cols-but-first">
    <thead>
        <tr>
            <th>Name</th>
            <th>Creation Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var bucket in (Model ?? Enumerable.Empty<S3Bucket>()).OrderBy(m => m.Name))
        {
            <tr data-bucket-name="@bucket.Name">
                <td><a href="/S3/@bucket.Name">@bucket.Name</a></td>
                <td>@bucket.CreationDate</td>
                <td>
                    <div class="gs-icons">
                        <a no-href class="red lnk-s3b-delete" title="Delete">
                            <i class="fa-solid fa-trash-can"></i>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    $(".lnk-s3b-delete").click(s3_DeleteBucketPrompt);
    $("#deleteS3BucketModal .yes-button").click(s3_DeleteBucket);

    const S3_URL_DELETE_BUCKET = "@Url.Action("DeleteBucket", "Buckets", new { bucketName = "__BUCKETNAME__" })";

    var prompt_BucketName;

    function s3_DeleteBucketPrompt(event)
    {
        try
        {
            var objNameElement = document.querySelector("#deleteS3BucketModal .title .object-name");
            var parentRow = gs_GetParentTableRow(event.currentTarget, true);

            prompt_BucketName = parentRow.getAttribute("data-bucket-name");

            objNameElement.innerText = prompt_BucketName;
            showWindow("deleteS3BucketModal");
        }
        catch(error)
        {
            gs_DisplayError(error);
        }
    }

    async function s3_DeleteBucket()
    {
        try
        {
            var bucketName = encodeURIComponent(prompt_BucketName);

            var url = S3_URL_DELETE_BUCKET
                .replace("__BUCKETNAME__", bucketName);

            var response = await fetch(url, { method: "DELETE" });

            if(!response.ok) {
                throw "Failed to delete S3 bucket: Server returned HTTP status " + response.status;
            }

            window.location.reload(true);
        }
        catch(error)
        {
            gs_DisplayError(error);
        }

        closeWindow("deleteS3BucketModal");
    }
</script>
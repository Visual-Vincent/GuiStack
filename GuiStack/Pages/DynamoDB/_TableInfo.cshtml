@*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * Copyright Â© Vincent Bengtsson & Contributors 2022-2024
 * https://github.com/Visual-Vincent/GuiStack
 *@

@using GuiStack.Extensions;
@using GuiStack.Models;
@model DynamoDBTableModel

@{
    await Html.RenderPartialAsync("~/Pages/Shared/_DeleteModal.cshtml", new DeleteModalModel("delete-dynamodb-row-modal"));
}

<table class="gs-info-table colored">
    <tbody>
        <tr>
            <td>Status</td>
            <td>@Model.Status</td>
        </tr>
        <tr>
            <td>ARN</td>
            <td>@Model.Arn</td>
        </tr>
        <tr>
            <td>Partition key</td>
            <td>@Model.PartitionKey.Name (@Model.PartitionKey.Type)</td>
        </tr>
        <tr>
            <td>Sort key</td>
            <td>
                @if(Model.SortKey != null)
                {
                    <text>@Model.SortKey.Name (@Model.SortKey.Type)</text>
                }
                else
                {
                    <text>(none)</text>
                }
            </td>
        </tr>
        <tr>
            <td>Item count</td>
            <td>@Model.ItemCount <span class="gs-object-type">(updated every ~6 hours)</span></td>
        </tr>
        <tr>
            <td>Table size</td>
            <td>@Model.TableSizeBytes.ToFormattedFileSize() <span class="gs-object-type">(updated every ~6 hours)</span></td>
        </tr>
    </tbody>
    <tbody class="additional-info">
        <tr>
            <td>Table class</td>
            <td>@Model.TableClass</td>
        </tr>
        <tr>
            <td>Capacity mode</td>
            <td>@Model.BillingMode</td>
        </tr>
        <tr>
            <td>Provisioned read capacity</td>
            <td>@(Model.ReadCapacityUnits > 0 ? $"{Model.ReadCapacityUnits} RCU" : "N/A")</td>
        </tr>
        <tr>
            <td>Provisioned write capacity</td>
            <td>@(Model.WriteCapacityUnits > 0 ? $"{Model.WriteCapacityUnits} WCU" : "N/A")</td>
        </tr>
        <tr>
            <td>Deletion protection</td>
            <td>@(Model.DeletionProtectionEnabled ? "Yes" : "No")</td>
        </tr>
    </tbody>
    <tbody>
        <tr class="expand-button text-center collapsed">
            <td colspan="2">
                <a no-href onclick="gsevent_InfoTable_ToggleButton_Click(event)">
                    View more <i class="fa-solid fa-angles-down" style="font-size: 12px"></i>
                </a>
            </td>
        </tr>
        <tr class="expand-button text-center expanded">
            <td colspan="2">
                <a no-href onclick="gsevent_InfoTable_ToggleButton_Click(event)">
                    View less <i class="fa-solid fa-angles-up" style="font-size: 12px"></i>
                </a>
            </td>
        </tr>
    </tbody>
</table>

<hr/>

<div style="text-align: right; font-size: 1.5em; margin: 10px 8px 8px 8px">
    <a no-href class="initial-white neon-green" title="Add new item" style="margin-right: 4px">
        <i class="fa-solid fa-plus"></i>
    </a>
    <a no-href onclick="dynamodb_UpdateItems()" class="initial-white neon-green" title="Refresh">
        <i class="fa-solid fa-rotate"></i>
    </a>
</div>

<div id="gs-dynamodb-items-list"></div>

<script type="text/javascript">
    const DynamoDB_LoadingTemplate =
        `<div class="gs-loading-box" style="font-size: 1.5em">
            <img class="spinner" src="/img/loading_wheel.apng"/>Loading...
        </div>`;

    async function dynamodb_UpdateItems()
    {
        var itemsList = document.getElementById("gs-dynamodb-items-list");
        itemsList.innerHTML = DynamoDB_LoadingTemplate;

        var response = await fetch("/DynamoDB/@Model.Name?handler=RenderTableContentsPartial");
        var contents = await response.text();

        itemsList.innerHTML = contents;
    }

    dynamodb_UpdateItems();
</script>

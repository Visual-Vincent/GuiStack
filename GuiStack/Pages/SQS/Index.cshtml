@*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 * 
 * Copyright © Vincent Bengtsson & Contributors 2022
 * https://github.com/Visual-Vincent/GuiStack
 *@

@page "{queue?}"

@using System.Net
@using Amazon.SQS
@model GuiStack.Pages.SQS.IndexModel

@{
    ViewData["Title"] = "SQS Queues";
    ViewData["QueueName"] = Model.Queue;

    bool hasQueueName = !string.IsNullOrWhiteSpace(Model.Queue);
}

@if(hasQueueName)
{
    <h1>@Model.Queue</h1>
}
else
{
    <div id="new-sqs-queue-modal" class="cssWindow dark backdropblur text-center">
        <div class="closeWindowButton"><a no-href onclick="closeParentWindow(event)">×</a></div>

        <h2 class="title">New SQS queue</h2>
        <p>
            <input type="text" class="name-textbox text-center" maxlength="80" style="width: 400px" />
        </p>
        <p>
            <input type="checkbox" id="new-sqs-queue-fifo-checkbox" class="fifo-checkbox" />
            <label for="new-sqs-queue-fifo-checkbox">FIFO</label>
        </p>

        <div class="modal-buttons text-center">
            <button onclick="sqs_CreateQueue()">Create</button>
        </div>
    </div>

    <div style="display: flex; align-items: center">
        <h1>SQS queues</h1>
        <div style="text-align: right; font-size: 1.5em; flex-grow: 1">
            <a no-href onclick="showWindow('new-sqs-queue-modal')" class="gs-icon-stack initial-white neon-green">
                <i class="fa-solid fa-database gs-rotate-270" style="margin-right: 4px"></i>
                <i class="bi bi-plus-circle-fill gs-icon-overlay stroked" style="color: #000000"></i>
            </a>
        </div>
    </div>
}

<div id="list-container">
    @try
    {
        if(!hasQueueName)
        {
            await Html.RenderPartialAsync("~/Pages/SQS/_QueuesTable.cshtml", await Model.SQSRepository.GetQueuesAsync());
        }
        else
        {
            var queueUrl = await Model.SQSRepository.GetQueueUrlAsync(Model.Queue);
            await Html.RenderPartialAsync("~/Pages/SQS/_QueueInfo.cshtml", await Model.SQSRepository.GetQueueAttributesAsync(queueUrl));
        }
    }
    catch(AmazonSQSException ex)
    {
        if(ex.StatusCode == HttpStatusCode.NotFound)
        {
            <h2 class="error-text">Queue not found</h2>
        }
        else
        {
            if(!hasQueueName)
            {
                <h2 class="error-text">Failed to fetch queues:</h2>
            }
            else
            {
                <h2 class="error-text">Failed to fetch queue contents:</h2>
            }

            <p class="error-text">@ex.Message</p>
        }
    }
    catch(Exception ex)
    {
        if(!hasQueueName)
        {
            <h2 class="error-text">Failed to fetch queues:</h2>
        }
        else
        {
            <h2 class="error-text">Failed to fetch queue contents:</h2>
        }

        <p class="error-text">@ex.Message</p>
    }
</div>

@if(!hasQueueName)
{
    <script type="text/javascript">
        async function sqs_CreateQueue()
        {
            try
            {
                var queueName = document.querySelector("#new-sqs-queue-modal .name-textbox").value;
                var isFifo = document.getElementById("new-sqs-queue-fifo-checkbox").checked;

                var response = await fetch("@Url.Action("CreateQueue", "Queues")", {
                    method: "PUT",
                    headers: new Headers({ "Content-Type": "application/json" }),
                    body: JSON.stringify({
                        queueName: queueName,
                        isFifo: isFifo
                    })
                });

                if(!response.ok) {
                    throw "Failed to create SQS queue: Server returned HTTP status " + response.status;
                }

                window.location.reload(true);
            }
            catch(error)
            {
                gs_DisplayError(error);
            }

            closeWindow("new-sqs-queue-modal");
        }
    </script>
}
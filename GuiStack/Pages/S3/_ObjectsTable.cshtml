@using GuiStack.Models;
@using GuiStack.Extensions;
@model IEnumerable<S3ObjectModel>

<div id="deleteS3ObjectModal" class="cssWindow dark backdropblur text-center">
    <div class="closeWindowButton"><a no-href onclick="closeParentWindow(event)">×</a></div>

    <h2 class="title">Are you sure you want to delete <span class="object-name" style="color: #FF8000"></span>?</h2>
    <p>This cannot be undone!</p>

    <div class="modal-buttons text-center">
        <button class="yes-button">Yes</button>
        <button onclick="closeParentWindow(event)">No</button>
    </div>
</div>

<div id="renameS3ObjectModal" class="cssWindow dark backdropblur text-center">
    <div class="closeWindowButton"><a no-href onclick="closeParentWindow(event)">×</a></div>

    <h2 class="title">Rename object</h2>
    <p><input type="text" class="name-textbox text-center" maxlength="1024" style="width: 400px" /></p>

    <div class="modal-buttons text-center">
        <button class="ok-button">OK</button>
    </div>
</div>

<table class="gs-list layout-fixed">
    <thead>
        <tr>
            <th>Name</th>
            <th>Size</th>
            <th>Last Modified</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var s3obj in (Model ?? Enumerable.Empty<S3ObjectModel>()).OrderBy(m => m.Object.Name))
        {
            var obj = s3obj.Object;
            <tr data-bucket-name="@s3obj.BucketName" data-object-name="@obj.Name" data-s3uri="@obj.S3Uri" data-url="@obj.Url">
                <td><a asp-controller="Buckets" asp-action="Download" asp-route-bucketName="@s3obj.BucketName" asp-route-objectName="@obj.Name">@obj.Name</a></td>
                <td>@obj.Size.ToFormattedFileSize()</td>
                <td>@obj.LastModified</td>
                <td>
                    <div class="gs-icons">
                        <a no-href class="blue lnk-s3-rename" title="Rename">
                            <i class="fa-solid fa-i-cursor"></i>
                        </a>
                        <a no-href class="purple lnk-s3-copyuri" title="Copy S3 URI">
                            <i class="fa-solid fa-link"></i>
                        </a>
                        <a no-href class="green lnk-s3-copyurl" title="Copy URL">
                            <i class="bi bi-globe"></i>
                        </a>
                        <a no-href class="red lnk-s3-delete" title="Delete">
                            <i class="fa-solid fa-trash-can"></i>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    $(".lnk-s3-copyuri").click(s3_CopyS3Uri);
    $(".lnk-s3-copyurl").click(s3_CopyUrl);
    $(".lnk-s3-delete").click(s3_DeleteObjectPrompt);
    $(".lnk-s3-rename").click(s3_RenameObjectPrompt);

    $("#deleteS3ObjectModal .yes-button").click(s3_DeleteObject);
    $("#renameS3ObjectModal .ok-button").click(s3_RenameObject);

    const URL_DELETE_OBJECT = "@Url.Action("DeleteObject", "Buckets", new { bucketName = "__BUCKETNAME__", objectName = "__OBJECTNAME__" })";
    const URL_RENAME_OBJECT = "@Url.Action("RenameObject", "Buckets", new { bucketName = "__BUCKETNAME__", objectName = "__OLDNAME__", newName = "__NEWNAME__" })";

    var prompt_BucketName;
    var prompt_ObjectName;

    function s3_CopyS3Uri(event)
    {
        try
        {
            var uri = gs_GetParentTableRow(event.currentTarget, true).getAttribute("data-s3uri");
            navigator.clipboard.writeText(uri);
        }
        catch(error)
        {
            gs_DisplayError(error);
        }
    }

    function s3_CopyUrl(event)
    {
        try
        {
            var url = gs_GetParentTableRow(event.currentTarget, true).getAttribute("data-url");
            navigator.clipboard.writeText(url);
        }
        catch(error)
        {
            gs_DisplayError(error);
        }
    }

    function s3_DeleteObjectPrompt(event)
    {
        try
        {
            var objNameElement = document.querySelector("#deleteS3ObjectModal .title .object-name");

            prompt_BucketName = gs_GetParentTableRow(event.currentTarget, true).getAttribute("data-bucket-name");
            prompt_ObjectName = gs_GetParentTableRow(event.currentTarget, true).getAttribute("data-object-name");

            objNameElement.innerText = prompt_ObjectName;
            showWindow("deleteS3ObjectModal");
        }
        catch(error)
        {
            gs_DisplayError(error);
        }
    }

    function s3_RenameObjectPrompt(event)
    {
        try
        {
            var nameTextBox = document.querySelector("#renameS3ObjectModal .name-textbox");

            prompt_BucketName = gs_GetParentTableRow(event.currentTarget, true).getAttribute("data-bucket-name");
            prompt_ObjectName = gs_GetParentTableRow(event.currentTarget, true).getAttribute("data-object-name");

            nameTextBox.value = prompt_ObjectName;
            showWindow("renameS3ObjectModal");
        }
        catch(error)
        {
            gs_DisplayError(error);
        }
    }

    async function s3_DeleteObject()
    {
        try
        {
            var bucketName = encodeURIComponent(prompt_BucketName);
            var objectName = encodeURIComponent(prompt_ObjectName);

            var url = URL_DELETE_OBJECT
                .replace("__BUCKETNAME__", bucketName)
                .replace("__OBJECTNAME__", objectName);

            var response = await fetch(url, { method: "DELETE" });

            if(!response.ok) {
                throw "Failed to delete S3 object: Server returned HTTP status " + response.status;
            }

            window.location.reload(true);
        }
        catch(error)
        {
            gs_DisplayError(error);
        }

        closeWindow("deleteS3ObjectModal");
    }

    async function s3_RenameObject()
    {
        try
        {
            var bucketName = encodeURIComponent(prompt_BucketName);
            var oldName = encodeURIComponent(prompt_ObjectName);
            var newName = encodeURIComponent(document.querySelector("#renameS3ObjectModal .name-textbox").value);

            var url = URL_RENAME_OBJECT
                .replace("__BUCKETNAME__", bucketName)
                .replace("__OLDNAME__", oldName)
                .replace("__NEWNAME__", newName);

            var response = await fetch(url, { method: "POST" });

            if(!response.ok) {
                throw "Failed to rename S3 object: Server returned HTTP status " + response.status;
            }

            window.location.reload(true);
        }
        catch(error)
        {
            gs_DisplayError(error);
        }

        closeWindow("renameS3ObjectModal");
    }
</script>
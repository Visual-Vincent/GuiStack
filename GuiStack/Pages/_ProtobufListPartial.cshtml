@*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 * 
 * Copyright © Vincent Bengtsson & Contributors 2022
 * https://github.com/Visual-Vincent/GuiStack
 *@

@{
    var protoListId = Guid.NewGuid().ToString("N");
    var protoList = $"__gs_protodefs_{protoListId}";
}

<ul id="gs-protobuf-list-@protoListId" data-proto-list-id="@protoListId" class="gs-tree gs-protobuf-list"></ul>

<script type="text/javascript">
    const @protoList = {};

    (function() {
        __gs_DynamicFunctions["gs_RefreshProtobufList_@protoListId"] = gs_RefreshProtobufList_@protoListId;
        gs_RefreshProtobufList_@(protoListId)();
    })();

    function gs_RefreshProtobufList_@(protoListId)()
    {
        var protobufs = [];

        for(var i = 0; i < localStorage.length; i++)
        {
            var key = localStorage.key(i);

            if(!key.startsWith("proto/"))
                continue;

            protobufs.push(key);
        }

        protobufs.sort((a, b) => b.localeCompare(a));

        for(var i = 0; i < protobufs.length; i++)
        {
            var key = protobufs[i];
            var path = key.split("/");

            if(path.length <= 1)
                continue;

            var currentLeaf = @protoList;

            for(var p = 1; p < path.length; p++)
            {
                var part = path[p];
                if(part.length <= 0)
                    continue;

                if(p == path.length - 1)
                {
                    currentLeaf[part] = { __gs_isProto: true, path: key, proto: localStorage.getItem(key) };
                    break;
                }

                if(!currentLeaf.hasOwnProperty(part))
                    currentLeaf[part] = {};

                currentLeaf = currentLeaf[part];
            }
        }

        var protobufList = document.getElementById("gs-protobuf-list-@protoListId");

        // Clear the definitions list
        while(protobufList.firstChild) {
            protobufList.removeChild(protobufList.lastChild);
        }

        var stack = [];

        for(var item in @protoList)
        {
            stack.push({ name: item, value: @(protoList)[item], parent: protobufList });
        }

        while(stack.length > 0)
        {
            var node = stack.pop();

            if(node.value.__gs_isProto)
            {
                var itemElement = document.createElement("li");
                itemElement.innerText = node.name;
                itemElement.setAttribute("data-proto-path", node.value.path);
                itemElement.addEventListener("click", Protobuf_DefinitionSelected);

                node.parent.appendChild(itemElement);
                continue;
            }

            var treeElement = document.createElement("ul");
            treeElement.classList.add("gs-tree");

            var nodeElement = document.createElement("li");
            nodeElement.setAttribute("data-title", node.name);
            nodeElement.appendChild(treeElement);

            node.parent.appendChild(nodeElement);

            for(var item in node.value)
            {
                stack.push({ name: item, value: node.value[item], parent: treeElement });
            }
        }

        // Small delay to allow the DOM to update
        window.setTimeout(__gs_RefreshTreeHandlers, 1);

        // This was intentionally put inside the gs_RefreshProtobufList function, so that it's not exposed globally
        function Protobuf_DefinitionSelected(event)
        {
            var protoPath = event.currentTarget.getAttribute("data-proto-path");

            $("ul#gs-protobuf-list-@protoListId li[data-proto-path]").removeClass("selected");
            event.currentTarget.classList.add("selected");

            document.getElementById("gs-protobuf-list-@protoListId").dispatchEvent(new CustomEvent("gs.protobuf.selected", {
                bubbles: false,
                detail: { element: event.currentTarget, protoPath: protoPath }
            }));
        }
    }
</script>